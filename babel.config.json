{
  "presets": ["@babel/preset-env"]
}

// presets 은 plugin 의 모음집

// 기본적인 웹팩 config.js (webpack.config.js)

// ex )
// const path = require("path")

// module.exports = {
//   mode: "development",
//   entry: {
//     main: "./src/app.js",
//   },
//   output: {
//     filename: "[name].js",
//     path: path.resolve("./dist"),
//   },
// }

// dist 디렉토리가 생성되면서 filename 의 파일이 만들어진다.

// index.html -> <script src="./dist/main.js"></script>

// 이제 모듈을 지원하지않는 브라우저에서도 동작하는 코드가 됐다.

// mode는 development, production, none이 있는데 development는 개발환경의 결과물을 만들때, 운영환경에서는 production을 사용한다.

// entry는 최초 진입점.  시작점 경로를 지정하는 옵션. 기본값은 ./src/index.js

// output 은 번들링 결과물을 위치할 경로. path.resolve()함수는 절대경로 주소를 얻어온다.

// __dirname 은 현재 실행 중인 폴더 경로

// Loader 웹팩이 웹 애플리케이션을 해석할 때 자바스크립트 파일이 아닌 것들을 변환할 수 있도록 도와준다.

// 생성자 함수 (constructor function) 는 이름의 첫 글자는 대문자로 시작 그리고 반드시 'new' 연산자를 붙여 객체 인스턴스를 실행

// loader 는 파일을 해석하고 변환하는 과정에 관여하고, plugin 은 결과물의 형태를 바꾸는 역할을
